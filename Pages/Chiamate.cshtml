@page
@model UfficioSinistri.Pages.ChiamateModel
@{
    ViewData["Title"] = "Elenco Sinistri";
}

<h1>@ViewData["Title"]</h1>

<div class="row g-2 mb-3">
    <div class="col-md-2">
        <input id="f-numero" class="form-control" placeholder="Numero…" />
    </div>
    <div class="col-md-2">
        <input id="f-targa" class="form-control" placeholder="Targa…" />
    </div>
    <div class="col-md-3">
        <input id="f-termini" class="form-control" placeholder="Testo/Riassunto/Evento…" />
    </div>
    <div class="col-md-2">
        <input id="f-datefrom" type="date" class="form-control" />
    </div>
    <div class="col-md-2">
        <input id="f-dateto" type="date" class="form-control" />
    </div>
</div>

<p>
    <button id="export-csv" class="btn btn-outline-secondary btn-sm">Esporta CSV</button>
    <button id="export-pdf" class="btn btn-outline-secondary btn-sm">Esporta PDF</button>
</p>

<table class="table table-sm table-bordered">
    <thead>
        <tr>
            <th>Numero</th>
            <th>Nome Comunicato</th>
            <th>Rubrica</th>
            <th>Evento</th>
            <th>Targa</th>
            <th>Riassunto</th>
            <th>Azioni</th>
        </tr>
    </thead>
    <tbody id="chiamate-tbody">
        <!-- popolate da JS -->
    </tbody>
</table>

@section Scripts {
    <script>
        (() => {
          const inputs = {
            Numero:   document.getElementById('f-numero'),
            Targa:    document.getElementById('f-targa'),
            Termini:  document.getElementById('f-termini'),
            DataFrom: document.getElementById('f-datefrom'),
            DataTo:   document.getElementById('f-dateto')
          };

          let timer;
          async function refreshTable() {
            const params = new URLSearchParams({ handler: 'Filter' });
            Object.entries(inputs).forEach(([k,el]) => {
              if (el.value) params.set('Filter' + k, el.value);
            });
            const resp = await fetch(`?${params.toString()}`);
            const data = await resp.json();
            const tbody = document.getElementById('chiamate-tbody');
            tbody.innerHTML = data.map(c => `
              <tr>
                <td>${c.numero||''}</td>
                <td>${c.nomeComunicato||''}</td>
                <td>${c.corrispondenzaRubrica||''}</td>
                <td>${c.evento||''}</td>
                <td>${c.targa||''}</td>
                <td>${c.riassunto||''}</td>
                <td>
                    <a href="/Dettaglio?id=${c.id}"
                        class="btn btn-firstpoint btn-sm"
                        style="padding: 0.3rem 0.7rem; min-width: 32px;">🔍</a>
                    <!-- export list-level (OnGetExportCsvAsync/OnGetExportPdfAsync di ChiamateModel) -->
                    <a href="?handler=ExportCsv&${params.toString()}&id=${c.id}"
                        class="btn btn-sm btn-outline-secondary">CSV</a>
                    <a href="?handler=ExportPdf&${params.toString()}&id=${c.id}"
                        class="btn btn-sm btn-outline-secondary">PDF</a>

                    <!-- export detail-level (OnGetExportCsvAsync/OnGetExportPdfAsync di DettaglioModel) -->
                    <a href="/Dettaglio?handler=ExportCsv&id=${c.id}"
                        class="btn btn-sm btn-outline-primary ms-1">CSV↓</a>
                    <a href="/Dettaglio?handler=ExportPdf&id=${c.id}"
                        class="btn btn-sm btn-outline-primary">PDF↓</a>
                </td>
              </tr>
            `).join('');
            //console.log("ℹ️ tbody.innerHTML:", tbody.innerHTML);
            console.log(data);
          }

          Object.values(inputs).forEach(el =>
            el.addEventListener('input', () => {
              clearTimeout(timer);
              timer = setTimeout(refreshTable, 300);
            })
          );

          document.getElementById('export-csv').onclick = () => {
            const qs = new URLSearchParams({ handler:'ExportCsv' });
            Object.entries(inputs).forEach(([k,el]) => el.value && qs.set('Filter'+k, el.value));
            window.location.href = `?${qs}`;
          };
          document.getElementById('export-pdf').onclick = () => {
            const qs = new URLSearchParams({ handler:'ExportPdf' });
            Object.entries(inputs).forEach(([k,el]) => el.value && qs.set('Filter'+k, el.value));
            window.location.href = `?${qs}`;
          };

          // caricamento iniziale
          refreshTable();
        })();
    </script>
}
